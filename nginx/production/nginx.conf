server {
    charset utf-8;
    listen 80;
    #listen [::]:80 default_server ipv6only=on; ## listen for ipv6

    server_name example.com;
    root        /code;
    index       index.php;

    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;

    # It sets the buffer size for the request body
    client_body_buffer_size 16K;
    # Used to set or allocate a buffer for request headers.
    client_header_buffer_size 1k;
    # If we intend to handle large file uploads, we need to set this directive to at least 2m or more.
    client_max_body_size 8m;
    # This directive is used to set the maximum number and size of buffers to read large request headers.
    large_client_header_buffers 4 8k;
    # Sometimes, all the request body is not stored in a buffer. The rest of it is saved or written to a temporary file.
    client_body_in_single_buffer on;

    # directive tells Nginx to display its current version on error pages
    server_tokens   off;

    #  They are responsible for the time, a server will wait for a client body or client header to be sent after request
    client_body_timeout 12s;
    client_header_timeout 12s;

    # To indicate whether or not a browser should be allowed to open a page in frame or iframe. This will prevent site
    # content embedded into other sites.
    add_header X-Frame-Options SAMEORIGIN;
    # Tell the browser to follow the MIME types indicated in the header.
    add_header X-Content-Type-Options nosniff;
    # By implementing the Content Security Policy (CSP) header, we can Prevent XSS, clickjacking, code injection attacks.
    add_header Content-Security-Policy "default-src 'self';";
    # to instruct the browser on how to handle the requests over a cross-domain
    add_header X-Permitted-Cross-Domain-Policies master-only;
    # It is used to identifies the address of the webpage that requested the current webpage.
    add_header Referrer-Policy same-origin;
    # ensure all communication from a browser is sent over HTTPS
    add_header Strict-Transport-Security 'max-age=31536000;
               includeSubDomains; preload';
    location / {
        # Redirect all requests to non-existent directories and files to index.php
        try_files $uri $uri/ /index.php$is_args$args;
        # Trim the trailing slash
        rewrite ^/(.*)/$ /$1 permanent;
    }

    location ~ ^/(status|ping)$ {
        allow 127.0.0.1;
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Use a UNIX socket
        # fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        # Use a TCP socket
        fastcgi_pass php:9000;
    }

    location = /favicon.ico {
        return 204;
        access_log     off;
        log_not_found  off;
    }

    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        # Use a UNIX socket
        # fastcgi_pass unix:/var/run/php/php8.0-fpm.sock;
        # Use a TCP socket
        fastcgi_pass php:9000;
    }

    location ~ /\. {
        deny all;
    }
}
